const canvas=document.createElement("canvas");canvas.width=window.innerWidth,canvas.height=window.innerHeight,canvas.style.width="100%",canvas.style.height="100%";const ctx=canvas.getContext("2d"),scale=Math.min(window.devicePixelRatio,2);function resizeCanvas(){canvas.width=window.innerWidth*scale,canvas.height=window.innerHeight*scale}canvas.style.transform=`scale(${scale})`,window.addEventListener("resize",resizeCanvas);let touchStartX=0,touchStartY=0,touchMoveX=0,touchMoveY=0;function render(){camera.updateProjectionMatrix(),requestAnimationFrame(render)}canvas.addEventListener("touchstart",(function(t){t.preventDefault(),touchStartX=t.touches[0].clientX,touchStartY=t.touches[0].clientY})),canvas.addEventListener("touchmove",(function(t){t.preventDefault(),touchMoveX=t.touches[0].clientX,touchMoveY=t.touches[0].clientY;const e=touchStartY-touchMoveY;camera.position.x+=(touchStartX-touchMoveX)/10,camera.position.y+=e/10})),canvas.addEventListener("touchend",(function(t){if(t.preventDefault(),2===t.touches.length){const e=t.touches[0],n=t.touches[1],a=Math.sqrt(Math.pow(n.clientX-e.clientX,2)+Math.pow(n.clientY-e.clientY,2));a>50&&camera.zoom<4?camera.zoom+=.1:a<30&&camera.zoom>.5&&(camera.zoom-=.1)}})),render();